# SQL Query word.port_index
# word.port_index

SELECT *
FROM world.port_index
WHERE LAT_DEG > 15;

SELECT *
FROM world.port_index
WHERE LONG_HEMI = 'E';

SELECT *
FROM world.port_index
WHERE COUNTRY = 'VN' AND LAT_DEG > 15;

SELECT *
FROM world.port_index
WHERE COUNTRY IN ('TR', 'VN');


SELECT *
FROM world.port_index
WHERE COUNTRY = 'VN'
ORDER BY LONGITUDE DESC;


SELECT *
FROM world.port_index
ORDER BY LATITUDE DESC
LIMIT 1;

SELECT *
FROM world.port_index
WHERE COUNTRY IN ('TR', 'VN') AND LAT_DEG BETWEEN 10 AND 20;

SELECT *
FROM world.port_index
WHERE COUNTRY = 'TR'
ORDER BY LONGITUDE ASC
LIMIT 1;

SELECT COUNTRY, COUNT(*) AS PORT_COUNT
FROM world.port_index
GROUP BY COUNTRY
ORDER BY PORT_COUNT DESC;

SELECT *
FROM world.port_index
WHERE PORT_NAME = 'TERN ISLAND' AND LONGITUDE < 0;

SELECT AVG(LATITUDE) AS AVG_LATITUDE, AVG(LONGITUDE) AS AVG_LONGITUDE
FROM world.port_index
WHERE COUNTRY = 'TR';

SELECT *
FROM world.port_index
ORDER BY CHART DESC
LIMIT 1;

SELECT COUNTRY, SUM(CHART) AS TOTAL_CHARTS
FROM world.port_index
GROUP BY COUNTRY
ORDER BY TOTAL_CHARTS DESC;

SELECT *
FROM world.port_index
WHERE COUNTRY = 'VN' AND LAT_DEG > 15 AND LONG_DEG > 109;

SELECT AVG(LATITUDE) AS AVG_LATITUDE, AVG(LONGITUDE) AS AVG_LONGITUDE
FROM world.port_index
WHERE COUNTRY = 'TR';

SELECT COUNTRY, COUNT(*) AS PORT_COUNT
FROM world.port_index
GROUP BY COUNTRY
HAVING COUNT(*) > 10;

SELECT *
FROM world.port_index
ORDER BY ABS(LATITUDE - (SELECT AVG(LATITUDE) FROM world.port_index))
LIMIT 5;

SELECT *
FROM world.port_index
ORDER BY ABS(LATITUDE - (SELECT AVG(LATITUDE) FROM world.port_index))
LIMIT 5;

SELECT *
FROM world.port_index
WHERE REGION_NO = (SELECT REGION_NO FROM world.port_index WHERE PORT_NAME = 'AYVALIK' AND COUNTRY = 'TR');

SELECT *
FROM world.port_index
WHERE REGION_NO = (SELECT REGION_NO FROM world.port_index WHERE PORT_NAME = 'AYVALIK' AND COUNTRY = 'TR');

SELECT COUNTRY, SUM(CHART) AS TOTAL_CHARTS
FROM world.port_index
GROUP BY COUNTRY
ORDER BY TOTAL_CHARTS DESC
LIMIT 5;

SELECT COUNTRY
FROM world.port_index
GROUP BY COUNTRY
HAVING COUNT(*) = SUM(CASE WHEN LAT_HEMI = 'N' THEN 1 ELSE 0 END);

SELECT *
FROM world.port_index
WHERE COUNTRY = 'VN' AND CHART > (SELECT AVG(CHART) FROM world.port_index WHERE COUNTRY = 'VN');

SELECT REGION_NO, AVG(LATITUDE) AS AVG_LATITUDE
FROM world.port_index
GROUP BY REGION_NO
ORDER BY AVG_LATITUDE DESC
LIMIT 1;

SELECT *
FROM world.port_index
WHERE COUNTRY = 'VN' AND REGION_NO != (SELECT REGION_NO FROM world.port_index WHERE PORT_NAME = 'HAI PHONG' AND COUNTRY = 'VN');

SELECT p1.*
FROM world.port_index p1
WHERE (p1.LATITUDE, p1.COUNTRY) IN (
    SELECT MAX(LATITUDE), COUNTRY
    FROM world.port_index
    GROUP BY COUNTRY
);

SELECT COUNTRY
FROM world.port_index
GROUP BY COUNTRY
HAVING MIN(LAT_DEG * 60 + LAT_MIN) > 10 * 60;

SELECT p1.*
FROM world.port_index p1
WHERE (p1.CHART, p1.REGION_NO) IN (
    SELECT MAX(CHART), REGION_NO
    FROM world.port_index
    GROUP BY REGION_NO
    HAVING AVG(CHART) > 150
);

SELECT *
FROM world.port_index
WHERE COUNTRY = 'VN'
ORDER BY SQRT(POWER(LATITUDE - (SELECT LATITUDE FROM world.port_index WHERE PORT_NAME = 'DA NANG' AND COUNTRY = 'VN'), 2) + POWER(LONGITUDE - (SELECT LONGITUDE FROM world.port_index WHERE PORT_NAME = 'DA NANG' AND COUNTRY = 'VN'), 2))
LIMIT 5;

SELECT p1.*
FROM world.port_index p1
WHERE (p1.CHART, p1.REGION_NO) IN (
    SELECT TOP 5 AVG(CHART), REGION_NO
    FROM world.port_index
    GROUP BY REGION_NO
    HAVING COUNT(*) > 2
    ORDER BY AVG(CHART) DESC
);

SELECT *
FROM world.port_index
WHERE LATITUDE > (SELECT AVG(LATITUDE) FROM world.port_index) AND LATITUDE < (SELECT AVG(LATITUDE) FROM world.port_index WHERE COUNTRY = 'VN');


SELECT p1.COUNTRY, p1.PORT_NAME, p2.PORT_NAME AS CLOSEST_PORT, 
       SQRT(POWER(p1.LATITUDE - p2.LATITUDE, 2) + POWER(p1.LONGITUDE - p2.LONGITUDE, 2)) AS DISTANCE
FROM world.port_index p1
JOIN world.port_index p2 ON p1.COUNTRY = p2.COUNTRY AND p1.PORT_NAME <> p2.PORT_NAME
WHERE p1.COUNTRY = 'VN'
AND SQRT(POWER(p1.LATITUDE - p2.LATITUDE, 2) + POWER(p1.LONGITUDE - p2.LONGITUDE, 2)) = (
    SELECT MIN(SQRT(POWER(p1.LATITUDE - p2.LATITUDE, 2) + POWER(p1.LONGITUDE - p2.LONGITUDE, 2)))
    FROM world.port_index p2
    WHERE p1.COUNTRY = p2.COUNTRY AND p1.PORT_NAME <> p2.PORT_NAME
)
ORDER BY COUNTRY, PORT_NAME;


SELECT p1.*
FROM world.port_index p1
WHERE (p1.LONGITUDE, p1.COUNTRY) IN (
    SELECT MAX(LONGITUDE), COUNTRY
    FROM world.port_index
    GROUP BY COUNTRY
);


SELECT COUNTRY, STDDEV(CHART) AS CHART_STDDEV
FROM world.port_index
GROUP BY COUNTRY
ORDER BY CHART_STDDEV DESC
LIMIT 5;


SELECT *
FROM world.port_index
WHERE LATITUDE > (SELECT AVG(LATITUDE) FROM world.port_index)
AND LONGITUDE < (SELECT AVG(LONGITUDE) FROM world.port_index);


SELECT *
FROM world.port_index
WHERE REGION_NO IN (
    SELECT REGION_NO
    FROM world.port_index
    GROUP BY REGION_NO
    HAVING SUM(CHART) > (SELECT AVG(CHART) FROM world.port_index)
);


SELECT *
FROM world.port_index
ORDER BY SQRT(POWER(LATITUDE - (SELECT AVG(LATITUDE) FROM world.port_index), 2) + POWER(LONGITUDE - (SELECT AVG(LONGITUDE) FROM world.port_index), 2))
LIMIT 5;


SELECT *
FROM world.port_index p1
WHERE NOT EXISTS (
    SELECT 1
    FROM world.port_index p2
    WHERE p2.CHART = p1.CHART + 1
);


SELECT COUNTRY
FROM world.port_index
GROUP BY COUNTRY
HAVING AVG(LONGITUDE) > AVG(LATITUDE);


SELECT p1.*
FROM world.port_index p1
WHERE (p1.LATITUDE, p1.REGION_NO) IN (
    SELECT MAX(LATITUDE), REGION_NO
    FROM world.port_index
    GROUP BY REGION_NO
);

SELECT COUNTRY
FROM world.port_index
GROUP BY COUNTRY
HAVING COUNT(*) > 1 AND SUM(CHART) % 2 = 0;


WITH CountryLatitudeZScore AS (
    SELECT 
        COUNTRY,
        PORT_NAME,
        (LATITUDE - AVG(LATITUDE) OVER (PARTITION BY COUNTRY)) / STDDEV(LATITUDE) OVER (PARTITION BY COUNTRY) AS Z_SCORE
    FROM world.port_index
)
SELECT *
FROM CountryLatitudeZScore
WHERE ABS(Z_SCORE) > 2;


